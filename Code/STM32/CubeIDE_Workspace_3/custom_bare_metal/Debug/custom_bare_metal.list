
custom_bare_metal.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000164  0800013c  0800013c  0001013c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002a0  080002a8  000102a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  080002a0  080002a0  000102a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080002a4  080002a4  000102a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000004  20000004  000102a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000004  080002a8  00020004  2**2
                  ALLOC
  7 ._user_heap_stack 00000600  20000020  080002a8  00020020  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  000102a8  2**0
                  CONTENTS, READONLY
  9 .debug_info   00000174  00000000  00000000  000102d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 000000ce  00000000  00000000  0001044c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 00000048  00000000  00000000  00010520  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00000030  00000000  00000000  00010568  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  00001000  00000000  00000000  00010598  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00000402  00000000  00000000  00011598  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    00003fba  00000000  00000000  0001199a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000053  00000000  00000000  00015954  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000058  00000000  00000000  000159a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800013c <__do_global_dtors_aux>:
 800013c:	b510      	push	{r4, lr}
 800013e:	4c05      	ldr	r4, [pc, #20]	; (8000154 <__do_global_dtors_aux+0x18>)
 8000140:	7823      	ldrb	r3, [r4, #0]
 8000142:	b933      	cbnz	r3, 8000152 <__do_global_dtors_aux+0x16>
 8000144:	4b04      	ldr	r3, [pc, #16]	; (8000158 <__do_global_dtors_aux+0x1c>)
 8000146:	b113      	cbz	r3, 800014e <__do_global_dtors_aux+0x12>
 8000148:	4804      	ldr	r0, [pc, #16]	; (800015c <__do_global_dtors_aux+0x20>)
 800014a:	f3af 8000 	nop.w
 800014e:	2301      	movs	r3, #1
 8000150:	7023      	strb	r3, [r4, #0]
 8000152:	bd10      	pop	{r4, pc}
 8000154:	20000004 	.word	0x20000004
 8000158:	00000000 	.word	0x00000000
 800015c:	08000288 	.word	0x08000288

08000160 <frame_dummy>:
 8000160:	b508      	push	{r3, lr}
 8000162:	4b03      	ldr	r3, [pc, #12]	; (8000170 <frame_dummy+0x10>)
 8000164:	b11b      	cbz	r3, 800016e <frame_dummy+0xe>
 8000166:	4903      	ldr	r1, [pc, #12]	; (8000174 <frame_dummy+0x14>)
 8000168:	4803      	ldr	r0, [pc, #12]	; (8000178 <frame_dummy+0x18>)
 800016a:	f3af 8000 	nop.w
 800016e:	bd08      	pop	{r3, pc}
 8000170:	00000000 	.word	0x00000000
 8000174:	20000008 	.word	0x20000008
 8000178:	08000288 	.word	0x08000288

0800017c <main>:
 * (1U<<10)      // Set bit 10 to 1
 * &=~(1U<<11)   // Set bit 11 to 0
 */

int main(void)
{
 800017c:	b480      	push	{r7}
 800017e:	b083      	sub	sp, #12
 8000180:	af00      	add	r7, sp, #0
   /*
     1.   Enable clock access to GPIOB & GPIOD */
	//RCC_AHB2_EN_R |= GPIOB_EN ;
    RCC->AHB2ENR |= GPIOB_EN ;
 8000182:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8000186:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000188:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800018c:	f043 0302 	orr.w	r3, r3, #2
 8000190:	64d3      	str	r3, [r2, #76]	; 0x4c
   /* 2.   Set LED_BLUE, LED_GREEN, LED_RED as output pin   */

	//GPIOB_MODE_R |= (1U<<10);    // Set bit 10 to 1
	//GPIOB_MODE_R &=~(1U<<11);   // Set bit 11 to 0
    GPIOB->MODER |= (1U<<10);
 8000192:	4b14      	ldr	r3, [pc, #80]	; (80001e4 <main+0x68>)
 8000194:	681b      	ldr	r3, [r3, #0]
 8000196:	4a13      	ldr	r2, [pc, #76]	; (80001e4 <main+0x68>)
 8000198:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800019c:	6013      	str	r3, [r2, #0]
    GPIOB->MODER &=~(1U<<11);
 800019e:	4b11      	ldr	r3, [pc, #68]	; (80001e4 <main+0x68>)
 80001a0:	681b      	ldr	r3, [r3, #0]
 80001a2:	4a10      	ldr	r2, [pc, #64]	; (80001e4 <main+0x68>)
 80001a4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80001a8:	6013      	str	r3, [r2, #0]

    GPIOB->MODER |= (1U<<0);
 80001aa:	4b0e      	ldr	r3, [pc, #56]	; (80001e4 <main+0x68>)
 80001ac:	681b      	ldr	r3, [r3, #0]
 80001ae:	4a0d      	ldr	r2, [pc, #52]	; (80001e4 <main+0x68>)
 80001b0:	f043 0301 	orr.w	r3, r3, #1
 80001b4:	6013      	str	r3, [r2, #0]
    GPIOB->MODER &=~(1U<<1);
 80001b6:	4b0b      	ldr	r3, [pc, #44]	; (80001e4 <main+0x68>)
 80001b8:	681b      	ldr	r3, [r3, #0]
 80001ba:	4a0a      	ldr	r2, [pc, #40]	; (80001e4 <main+0x68>)
 80001bc:	f023 0302 	bic.w	r3, r3, #2
 80001c0:	6013      	str	r3, [r2, #0]

	while(1) {

	//  1.    Toggle pin PB0 to high
		//GPIOB_OD_R ^= (1U<<5);
		GPIOB->ODR ^= (1U<<5);
 80001c2:	4b08      	ldr	r3, [pc, #32]	; (80001e4 <main+0x68>)
 80001c4:	695b      	ldr	r3, [r3, #20]
 80001c6:	4a07      	ldr	r2, [pc, #28]	; (80001e4 <main+0x68>)
 80001c8:	f083 0320 	eor.w	r3, r3, #32
 80001cc:	6153      	str	r3, [r2, #20]
		//GPIOB->ODR ^= (1U<<1);
		for (int i=0;i<100000;i++) {
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <main+0x5e>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a02      	ldr	r2, [pc, #8]	; (80001e8 <main+0x6c>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	ddf8      	ble.n	80001d4 <main+0x58>
		GPIOB->ODR ^= (1U<<5);
 80001e2:	e7ee      	b.n	80001c2 <main+0x46>
 80001e4:	48000400 	.word	0x48000400
 80001e8:	0001869f 	.word	0x0001869f

080001ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001ec:	480d      	ldr	r0, [pc, #52]	; (8000224 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001ee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001f0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001f4:	480c      	ldr	r0, [pc, #48]	; (8000228 <LoopForever+0x6>)
  ldr r1, =_edata
 80001f6:	490d      	ldr	r1, [pc, #52]	; (800022c <LoopForever+0xa>)
  ldr r2, =_sidata
 80001f8:	4a0d      	ldr	r2, [pc, #52]	; (8000230 <LoopForever+0xe>)
  movs r3, #0
 80001fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001fc:	e002      	b.n	8000204 <LoopCopyDataInit>

080001fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000200:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000202:	3304      	adds	r3, #4

08000204 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000204:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000206:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000208:	d3f9      	bcc.n	80001fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800020a:	4a0a      	ldr	r2, [pc, #40]	; (8000234 <LoopForever+0x12>)
  ldr r4, =_ebss
 800020c:	4c0a      	ldr	r4, [pc, #40]	; (8000238 <LoopForever+0x16>)
  movs r3, #0
 800020e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000210:	e001      	b.n	8000216 <LoopFillZerobss>

08000212 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000212:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000214:	3204      	adds	r2, #4

08000216 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000216:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000218:	d3fb      	bcc.n	8000212 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800021a:	f000 f811 	bl	8000240 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800021e:	f7ff ffad 	bl	800017c <main>

08000222 <LoopForever>:

LoopForever:
    b LoopForever
 8000222:	e7fe      	b.n	8000222 <LoopForever>
  ldr   r0, =_estack
 8000224:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000228:	20000004 	.word	0x20000004
  ldr r1, =_edata
 800022c:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000230:	080002a8 	.word	0x080002a8
  ldr r2, =_sbss
 8000234:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000238:	20000020 	.word	0x20000020

0800023c <ADC1_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800023c:	e7fe      	b.n	800023c <ADC1_IRQHandler>
	...

08000240 <__libc_init_array>:
 8000240:	b570      	push	{r4, r5, r6, lr}
 8000242:	4d0d      	ldr	r5, [pc, #52]	; (8000278 <__libc_init_array+0x38>)
 8000244:	4c0d      	ldr	r4, [pc, #52]	; (800027c <__libc_init_array+0x3c>)
 8000246:	1b64      	subs	r4, r4, r5
 8000248:	10a4      	asrs	r4, r4, #2
 800024a:	2600      	movs	r6, #0
 800024c:	42a6      	cmp	r6, r4
 800024e:	d109      	bne.n	8000264 <__libc_init_array+0x24>
 8000250:	4d0b      	ldr	r5, [pc, #44]	; (8000280 <__libc_init_array+0x40>)
 8000252:	4c0c      	ldr	r4, [pc, #48]	; (8000284 <__libc_init_array+0x44>)
 8000254:	f000 f818 	bl	8000288 <_init>
 8000258:	1b64      	subs	r4, r4, r5
 800025a:	10a4      	asrs	r4, r4, #2
 800025c:	2600      	movs	r6, #0
 800025e:	42a6      	cmp	r6, r4
 8000260:	d105      	bne.n	800026e <__libc_init_array+0x2e>
 8000262:	bd70      	pop	{r4, r5, r6, pc}
 8000264:	f855 3b04 	ldr.w	r3, [r5], #4
 8000268:	4798      	blx	r3
 800026a:	3601      	adds	r6, #1
 800026c:	e7ee      	b.n	800024c <__libc_init_array+0xc>
 800026e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000272:	4798      	blx	r3
 8000274:	3601      	adds	r6, #1
 8000276:	e7f2      	b.n	800025e <__libc_init_array+0x1e>
 8000278:	080002a0 	.word	0x080002a0
 800027c:	080002a0 	.word	0x080002a0
 8000280:	080002a0 	.word	0x080002a0
 8000284:	080002a4 	.word	0x080002a4

08000288 <_init>:
 8000288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800028a:	bf00      	nop
 800028c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800028e:	bc08      	pop	{r3}
 8000290:	469e      	mov	lr, r3
 8000292:	4770      	bx	lr

08000294 <_fini>:
 8000294:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000296:	bf00      	nop
 8000298:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800029a:	bc08      	pop	{r3}
 800029c:	469e      	mov	lr, r3
 800029e:	4770      	bx	lr
